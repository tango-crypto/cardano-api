{
    "containerDefinitions": [
        {
            "name": "firelens-container",
            "essential": true,
            "image": "public.ecr.aws/aws-observability/aws-for-fluent-bit:arm64-2.22.0",
            "name": "log_router",
            "firelensConfiguration": {
                "type": "fluentbit",
                "options": {
                    "enable-ecs-log-metadata": "true"
                }
            },
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "firelens-container",
                    "awslogs-region": "us-east-1",
                    "awslogs-create-group": "true",
                    "awslogs-stream-prefix": "firelens"
                }
            },
            "memoryReservation": 50
        },
        {
            "name": "cardano-api",
            "cpu": 256,
            "memory": 300,
            "memoryReservation": 100,
            "portMappings": [
                {
                  "hostPort": 3000,
                  "protocol": "tcp",
                  "containerPort": 3000
                }
              ],
            "essential": true,
            "environment": [
                {
                    "name": "NETWORK",
                    "value": "testnet"
                },
                {
                    "name": "PORT",
                    "value": "3000"
                }
            ],
            "ulimits": [{
                "name": "nofile",
                "softLimit": 80000,
                "hardLimit": 80000
            }],
            "mountPoints": [],
            "volumesFrom": [],
            "secrets": [
                {
                    "name": "AWS_ACCOUNT_ID",
                    "valueFrom": "/staging/v1/aws/acount_id"
                },
                {
                    "name": "AWS_REGION",
                    "valueFrom": "/v1/aws/region"
                },
                {
                    "name": "DB_DEBUG",
                    "valueFrom": "/staging/v1/db/testnet/debug"
                },
                {
                    "name": "DB_HOST",
                    "valueFrom": "/staging/v1/db/testnet/host"
                },
                {
                    "name": "DB_NAME",
                    "valueFrom": "/staging/v1/db/testnet/name"
                },
                {
                    "name": "DB_PORT",
                    "valueFrom": "/staging/v1/db/testnet/port"
                },
                {
                    "name": "DB_PWD",
                    "valueFrom": "/staging/v1/db/testnet/pwd"
                },
                {
                    "name": "DB_USER",
                    "valueFrom": "/staging/v1/db/testnet/user"
                },
                {
                    "name": "QUEUE_NAME",
                    "valueFrom": "/staging/v1/cardano-submit/queue"
                },
                {
                    "name": "DYNAMO_DB_ACCOUNT_TABLE_NAME",
                    "valueFrom": "/staging/v1/api/db/table"
                }
            ],
            "user": "node",
            "readonlyRootFilesystem": true,
            "dockerLabels": {
                "Name": "cardano-api-testnet",
                "ECS": "cardano-staging",
                "Env": "staging"
            },
            "logConfiguration": {
                "logDriver": "awsfirelens",
                 "options": {
                    "Name": "loki",
                    "Url": "http://10.0.6.143:3100/loki/api/v1/push",
                    "Labels": "{job=\"firelens\"}",
                    "RemoveKeys": "container_id,ecs_task_arn",
                    "LabelKeys": "container_name,ecs_task_definition,source,ecs_cluster",
                    "LineFormat": "key_value"
                }
            }
        }
    ],
    "family": "cardano-api-testnet-staging",
    "networkMode": "awsvpc",
    "taskRoleArn": "cardanoTaskExecutionStaging",
    "executionRoleArn": "cardanoTaskExecutionStaging",
    "volumes": [],
    "placementConstraints": [],
    "requiresCompatibilities": [
        "EC2"
    ]
}
