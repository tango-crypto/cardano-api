{
    "containerDefinitions": [
        {
            "name": "cardano-api",
            "cpu": 1024,
            "memory": 2048,
            "memoryReservation": 2048,
            "portMappings": [
                {
                  "hostPort": 3000,
                  "protocol": "tcp",
                  "containerPort": 3000
                }
              ],
            "essential": true,
            "environment": [
                {
                    "name": "NETWORK",
                    "value": "testnet"
                },
                {
                    "name": "PORT",
                    "value": "3000"
                }
            ],
            "ulimits": [{
                "name": "nofile",
                "softLimit": 80000,
                "hardLimit": 80000
            }],
            "mountPoints": [],
            "volumesFrom": [],
            "secrets": [
                {
                    "name": "AWS_REGION",
                    "valueFrom": "/v1/aws/region"
                },
                {
                    "name": "SUBMIT_EVENTBUS_NAME",
                    "valueFrom": "/prod/v1/cardano-submit/eventbus"
                },
                {
                    "name": "DB_DEBUG",
                    "valueFrom": "/prod/v1/db/testnet/debug"
                },
                {
                    "name": "DB_HOST",
                    "valueFrom": "/prod/v1/db/testnet/host"
                },
                {
                    "name": "DB_NAME",
                    "valueFrom": "/prod/v1/db/testnet/name"
                },
                {
                    "name": "DB_PORT",
                    "valueFrom": "/prod/v1/db/testnet/port"
                },
                {
                    "name": "DB_PWD",
                    "valueFrom": "/prod/v1/db/testnet/pwd"
                },
                {
                    "name": "DB_USER",
                    "valueFrom": "/prod/v1/db/testnet/user"
                },
                {
                    "name": "DYNAMO_DB_ACCOUNT_TABLE_NAME",
                    "valueFrom": "/prod/v1/api/db/table"
                },
                {
                    "name": "REDIS_CLUSTERS",
                    "valueFrom": "/prod/v1/tyk/redis_cluster"
                },
                {
                    "name": "REDIS_PWD",
                    "valueFrom": "/prod/v1/tyk/redis_pwd"
                },
                {
                    "name": "BUSINESS_ADDRESS",
                    "valueFrom": "/prod/v1/api/business_address/testnet"
                },
                {
                    "name": "BUSINESS_POLICY_ID",
                    "valueFrom": "/prod/v1/api/business_policy_id/testnet"
                },
                {
                    "name": "BUSINESS_POLICY_SCRIPT",
                    "valueFrom": "/prod/v1/api/business_policy_script/testnet"
                },
                {
                    "name": "BUSINESS_POLICY_SCRIPT_KEYS",
                    "valueFrom": "/prod/v1/api/business_policy_script_keys/testnet"
                },
                {
                    "name": "BUSINESS_TOKEN_NAME",
                    "valueFrom": "/v1/api/business_token_name/testnet"
                },
                {
                    "name": "OGMIOS_PORT",
                    "valueFrom": "/prod/v1/cardano-submit/testnet/server_port"
                }
            ],
            "user": "node",
            "readonlyRootFilesystem": true,
            "dockerLabels": {
                "Name": "cardano-api-testnet",
                "ECS": "cardano-prod",
                "Env": "production"
            },
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "/ecs/cardano-prod/api/testnet",
                    "awslogs-region": "us-east-1",
                    "awslogs-stream-prefix": "ecs"
                }
            }
        }
    ],
    "family": "cardano-api-testnet",
    "networkMode": "awsvpc",
    "taskRoleArn": "cardanoTaskExecutionProd",
    "executionRoleArn": "cardanoTaskExecutionProd",
    "volumes": [],
    "placementConstraints": [],
    "requiresCompatibilities": [
        "EC2"
    ]
}
