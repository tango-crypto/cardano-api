version: '3'
services:
  cardano-api:
    build:
      context: .
      target: build
    command: npm run start:dev
    env_file: .env
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    volumes:
      - .:/opt/node_app/app/
    depends_on:
      db:
        condition: service_healthy
      redis:
         condition: service_healthy
      scylladb:
        condition: service_healthy
        
  redis:
    image: redis:6.2.6
    command: redis-server
    ports:
      - target: 6379
        published: 6377
        protocol: tcp
        mode: host
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  scylladb:
    image: scylladb/scylla
    container_name: scylladb
    command:
      - --alternator-port 8000
      - --alternator-write-isolation always
    volumes:
      - /var/lib/scylla:/var/lib/scylla
    healthcheck:
        test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        interval: 10s
        timeout: 5s
        retries: 10

  db:
    image: postgres
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
      - ./db/create_role.sql:/docker-entrypoint-initdb.d/create_role.sql
      - ./db/init.sql:/docker-entrypoint-initdb.d/testnet-02-16-2023.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  db:
    driver: local
