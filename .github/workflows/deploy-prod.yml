name: deploy to prod

on:
  workflow_dispatch:
    inputs:
      imageTag:
        description: 'Image tag'
        required: true

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  CLUSTER_NAME: "cardano-prod"
  CONTAINER_NAME: "cardano-api"

jobs:
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TANGOBOT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TANGOBOT_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Deploy testnet in prod cluster
      # - replace image
      # - deploy service
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-testnet
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deploy/prod-testnet-td.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.imageTag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-testnet.outputs.task-definition }}
          service: cardano-api-testnet
          cluster: ${{ env.CLUSTER_NAME }}
          wait-for-service-stability: false

      # Deploy mainnet in prod cluster
      # - replace image
      # - deploy service
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-mainnet
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deploy/prod-mainnet-td.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.imageTag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-mainnet.outputs.task-definition }}
          service: cardano-api-mainnet
          cluster: ${{ env.CLUSTER_NAME }}
          wait-for-service-stability: false
